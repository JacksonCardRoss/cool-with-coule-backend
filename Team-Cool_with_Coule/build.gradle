plugins {
    id 'java'
    id 'com.github.spotbugs' version '4.7.1'
    id 'com.adarshr.test-logger' version '3.0.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'net.ltgt.apt-idea' version "0.15"
    id 'io.franzbecker.gradle-lombok' version '3.2.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/']
        }
        resources {
            srcDirs = ['src/resources/']
        }
    }
    test {
        java {
            srcDirs = ['tst/']
        }
        resources {
            srcDirs = ['tst/resources/']
        }
    }
}

spotbugs {
    spotbugsTest.enabled = false
    ignoreFailures = true
}

spotbugsMain {
    reports {
        html {
            enabled = true
        }
    }
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    implementation 'com.google.guava:guava:30.1.1-jre'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    implementation group: 'com.google.dagger', name: 'dagger', version: '2.15'

    implementation "com.google.dagger:dagger:2.15"
    annotationProcessor"com.google.dagger:dagger-compiler:2.15"

    // https://mvnrepository.com/artifact/org.testng/testng
    implementation group: 'org.testng', name: 'testng', version: '6.14.3'

    // AWS functions
    // https://mvnrepository.com/artifact/software.amazon.awssdk/bom
    runtimeOnly group: 'software.amazon.awssdk', name: 'bom', version: '2.17.180', ext: 'pom'
    implementation group: 'software.amazon.awssdk', name: 'dynamodb', version: '2.17.180'
    implementation group: 'software.amazon.awssdk', name: 'lambda', version: '2.17.180'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.12.209'

    // Added for lombok
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

    // Added for using log4j usage
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    //twilio
    implementation group: "com.twilio.sdk", name: "twilio", version: "8.30.0"
}

test {
    useJUnitPlatform()

    testlogger {
        theme 'plain'
        logLevel 'quiet'
    }

    testLogging {
        // set options for log level DEBUG and INFO
        debug {
//            events TestLogEvent.STARTED,
//                    TestLogEvent.FAILED,
//                    TestLogEvent.PASSED,
//                    TestLogEvent.SKIPPED,
//                    TestLogEvent.STANDARD_ERROR,
//                    TestLogEvent.STANDARD_OUT
//            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))

                def scoringPercentage = 10 - result.failedTestCount
                scoringPercentage = scoringPercentage / 10
                println("Exit Result for Scoring: " + scoringPercentage)
            }
        }
    }
}

project.configurations.implementation.setCanBeResolved(true)


task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('./lib') {
        from configurations.runtimeClasspath
    }
}