@startuml
'https://plantuml.com/sequence-diagram

actor "Customer" as client
participant "Customer Website Page" as apiGateway
participant "CheckoutActivity" as checkoutActivity
participant "InventoryDao" as inventoryDao
participant "CustomerDAO" as customerDao
participant "OrderDAO" as orderDao
database "DynamoDB" as dynamoDB

client -> apiGateway : Checkout Request
alt if cart is empty
apiGateway --> client : return 400 response
else else continue
end
apiGateway -> checkoutActivity : Map<Product, int> and Customer
checkoutActivity -> checkoutActivity : create new Order object with unique id
loop for each product in the cart
alt try - check quantity > 0
checkoutActivity -> inventoryDao : Product Id
inventoryDao -> dynamoDB : Product Id
dynamoDB --> inventoryDao : return Product data
else catch OutOfStockException
inventoryDao --> checkoutActivity : throw OutOfStockException
checkoutActivity --> apiGateway : throw OutStockException
apiGateway --> client : return 400 response with msg
end
inventoryDao --> checkoutActivity : return Product object
checkoutActivity -> checkoutActivity : remove the amount from the quantity
checkoutActivity -> inventoryDao : Product
inventoryDao -> dynamoDB : Product with updated quantity
dynamoDB --> inventoryDao : return 200 response
inventoryDao --> checkoutActivity : return updated Product object
checkoutActivity -> checkoutActivity : add Product id to Order List<String>
end
alt if user has an id
checkoutActivity -> customerDao : get Customer by id
customerDao -> dynamoDB : customer id
dynamoDB --> customerDao : return Customer data
customerDao --> checkoutActivity : return Customer object
checkoutActivity -> checkoutActivity : Add orderId to historyOrderIds
checkoutActivity -> customerDao : Customer with updated historyOrderIds
customerDao -> dynamoDB : Customer
dynamoDB --> customerDao : return 200 response
customerDao --> checkoutActivity : return updated Customer object

else else continue
end
checkoutActivity -> orderDao : add Order
orderDao -> dynamoDB : Order
dynamoDB --> orderDao : return 200 response
orderDao --> checkoutActivity : return Order
checkoutActivity --> apiGateway : return CheckoutRequestResult data
apiGateway --> client : return 200 response with CheckoutRequestResult data

@enduml