@startuml


' Changed Existing User to Customer for simplicity in naming other classes -Jackson
class Customer {
-@DynamoDBIndexHashKey customerId : String
-name : String
-@DynamoDBHashKey email : String
-@DynamoDBRangeKey password : String
-location : Location
-historyOrderIds : List<String>
-isAdmin : Boolean
}

class Order{
- @DynamoDBHashKey orderId : String
-customerModel : CustomerModel
-productNames : List<String>
-orderDate : Date
}

class Product{
-@DynamoDBHashKey name : String
-@DynamoDBIndexHashKey type : String
-upcCode : String
-quantity : Integer
-description : String
-priceInCents : Long
-imageUrl : String
}

class Location{
-address : String
-city : String
-state : String
-zipCode : String
}

class InventoryDao {
-dynamoDbMapper : DynamoDBMapper
}

class CustomerDao {
-dynamoDbMapper : DynamoDBMapper
}

class OrderDao {
-dynamoDbMapper : DynamoDBMapper
}

class CustomerModel {
-customerId : String
-name : String
-email : String
-location : Location
-historyOrderIds : List<String>
}

class ResponseStatus {
}

class CustomerNotFoundException extends RuntimeException{
}

class OutOfStockException extends RuntimeException{
}

class CustomerAlreadyExistsException extends RuntimeException{
}

class ProductDoesNotExistException extends RuntimeException{
}

class PasswordDoesNotMatchException extends RuntimeException{
}

class InvalidEmailException extends RuntimeException{
}


Customer --> Location
Order --> Customer
Order--> Product

InventoryDao : +getProduct(String) : Product
InventoryDao : +getInventory() : List<Product>
InventoryDao : +getInventoryByType(String) : List<Product>
InventoryDao : +getInventoryByPrice(Long) : List<Product>
InventoryDao : +getInventoryByPrice(Long, String) : List<Product>
InventoryDao : +saveProduct(Product)
InventoryDao : +deleteProduct(Product)

CustomerDao : +getCustomer(String ) : Customer
CustomerDao : +saveCustomer(Customer)
CustomerDao : +deleteCustomer(Customer)

OrderDao : +getOrder(String) : Order
OrderDao : +addOrder(Order)


@enduml